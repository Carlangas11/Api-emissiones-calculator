# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserModel {
  _id: String!
  email: String!
  password: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponse {
  access_token: String!
  user: UserModel!
}

type nivel1Model {
  _id: String
  name: String
}

type nivel2Model {
  _id: String
  name: String
  nivel1: nivel1Model
}

type nivel3Model {
  _id: String
  name: String
  nivel2: nivel2Model
}

type nivel4Model {
  _id: String
  name: String
  nivel2: nivel2Model
  nivel3: nivel3Model
}

type contaminanteModel {
  _id: String!
  name: String!
  value: Float!
  measureUnit: String!
  nivel2: nivel2Model!
  nivel3: nivel3Model!
  nivel4: nivel4Model!
}

type contaminanteOutput {
  _id: String!
  name: String!
  value: Float!
  measureUnit: String!
  nivel1: String!
  nivel2: String!
  nivel3: String!
  nivel4: String!
}

type contaminanteResponse {
  contaminantes: [contaminanteOutput!]!
  pagination: String
}

type Report {
  ok: Boolean!
  msg: String!
  startDate: DateTime!
  endDate: DateTime!
  diccionaryID: String!
  reportID: String!
}

type contaminantesDto {
  name: String!
  value: Float!
  measureUnit: String!
  emission: Float!
  emissionUnit: String!
}

type reportItemsReponse {
  nivel1: String!
  nivel2: String
  nivel3: String
  nivel4: String
  consumption: Float!
  consumptionUnit: String!
  costCenter: String!
  period: String!
  totalFe: Float!
  measureUnitFe: String!
  totalEmission: Float!
  totalEmissionUnit: String!
  contaminantes: [contaminantesDto!]
}

type ReportOutPut {
  id: String!
  ok: Boolean!
  msg: String!
  startDate: DateTime!
  endDate: DateTime!
}

type ReportList {
  id: String!
  name: String!
  status: String!
  createdAt: DateTime!
}

type ReportDeleteOutDto {
  id: String!
  description: String!
  status: String!
}

type Query {
  session: UserModel!
  users: [UserModel]!
  user(input: FindUserInput!): UserModel
  seed(lvl: String!): String
  getAllLevel(lvl: String!): [ResultUnion!]
  getLevelById(id: String!): ResultUnion
  getContaminantes(pagination: Float!): contaminanteResponse!
  getReportItems(reportId: String!): [reportItemsReponse!]!
  generateReportExcel: Report!
  generateDicionary: Report!
  getReports: [ReportList!]!
}

input FindUserInput {
  _id: String!
}

union ResultUnion = nivel1Model | nivel2Model | nivel3Model | nivel4Model | contaminanteModel

type Mutation {
  login(loginUserInput: LoginUserInput!): LoginResponse!

  """This action adds a new user"""
  createUser(input: UserInput!): UserModel!

  """This action updates a #id user"""
  updateUser(input: UpdateUserInput!): UserModel!

  """This action removes a #id user"""
  removeUser(input: FindUserInput!): String!
  createContaminante(contaminanteInput: ContaminanteInput!): contaminanteModel
  updateContaminante(updateContaminanteInput: UpdateContaminanteInput!): contaminanteModel
  deleteContaminante(id: String!): contaminanteModel
  generateReport(input: [GenerateReportInput!]!): ReportOutPut!
  deleteReport(id: String!): ReportDeleteOutDto!
}

input LoginUserInput {
  email: String!
  password: String!
}

input UserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  _id: String!
  email: String
  password: String
}

input ContaminanteInput {
  name: String!
  value: Float!
  measureUnit: String!
  nivel2: String!
  nivel3: String!
  nivel4: String!
}

input UpdateContaminanteInput {
  _id: String!
  name: String
  value: Float
  measureUnit: String
  nivel2: String
  nivel3: String
  nivel4: String
}

input GenerateReportInput {
  consumoAnual: Float!
  alcance: Float!
  area: String!
  fuenteDeConsumo: String!
  subfuenteDeConsumo: String!
  unidades: String!
}